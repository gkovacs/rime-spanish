# Rime schema
# encoding: utf-8

schema:
  schema_id: spanish_colemak
  name: "西班牙語colemak"
  version: "poly2014.04.17自動上屏"
  author:
    - polyhedron<biopolyhedron@gmail.com>
  description: |
    版本：poly2014.04.17自動上屏
    輸入拉丁字母國際集。支持西歐、土耳其、越南、梵文和阿拉伯文轉寫、大部分國際音標
    特殊字符均用';'爲前加符；上標後加q，下標後加Q；組合上加符f，組合下加符F
    
    ※※本版dict.yaml採用自動上屏手段，需要更新小狼毫版本至0.9.20或以上！！※※
    
    如有改進建議，歡迎和作者聯繫！

switches:
  - name: ascii_mode
    reset: 0
    states: [ 拉丁, 英文 ]

engine:
  processors:
    - ascii_composer
    - selector
    - key_binder
    - speller
    - punctuator  # 先於 editor 才會使空格作符號上屏
    - navigator
    - express_editor
  segmentors:
    - ascii_segmentor
    - abc_segmentor
    - punct_segmentor
    - fallback_segmentor
  translators:
    - punct_translator
    - table_translator

menu:
  alternative_select_keys: '@#$%&_{}\|'

speller:
  alphabet: 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ`1234567890-=[];'',./~!^*()+:"<>?'
  delimiter: ''
  # 我看如果編碼中字母在前符號在後，就不要自動上屏的好。
  # 因爲打單字母不能自動上屏，只有特殊字符能，反而無法連打完整的單詞。如 bae;d 的分號處
  # 如果前置符號鍵，單字母便是唯一碼而可以自動上屏，這個選項就有用了。如 b;aed
  auto_select: true

translator:
  dictionary: spanish_colemak
  enable_user_dict: false
  enable_sentence: true
  comment_format:
    - xform/^~(.*)$/$1/

punctuator:  # 只須定義空格一個符號
  use_space: true
  half_shape: &punct
    ' ' : { commit: ' ' }
  full_shape: *punct

ascii_composer:
  switch_key:
    Shift_L: noop
    Shift_R: noop

key_binder:
  bindings:
    - {accept: "Control+Shift+1", select: .next, when: always}
    - {accept: "Control+Shift+n", select: japanese, when: always}
    - {accept: "Control+Shift+N", select: japanese, when: always}
    - {accept: "Control+Shift+k", select: korean, when: always}
    - {accept: "Control+Shift+K", select: korean, when: always}
    - {accept: "Control+Shift+v", select: vietnamese, when: always}
    - {accept: "Control+Shift+V", select: vietnamese, when: always}
    - {accept: "Control+Shift+j", select: double_jyutping_extra, when: always}
    - {accept: "Control+Shift+J", select: double_jyutping_extra, when: always}
    - {accept: "Control+Shift+m", select: td_pinyin_flypy_extra, when: always}
    - {accept: "Control+Shift+M", select: td_pinyin_flypy_extra, when: always}
    - {accept: "Control+Shift+l", select: international, when: always}
    - {accept: "Control+Shift+L", select: international, when: always}
    - {accept: "F16", select: td_pinyin_flypy_extra, when: always}
    - {accept: "F19", select: .next, when: always}
